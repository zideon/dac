[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

authc.loginUrl = /login.xhtml
authc.successUrl = /index.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

ssl.enabled = false

# Use default password matcher (SHA-256, 500000 hash iterations)
# passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

# DataSource Setup
datasource = org.apache.shiro.jndi.JndiObjectFactory
datasource.resourceName = jdbc/mysqlDac
datasource.resourceRef = true

# JDBC Realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT SENHA FROM USUARIO WHERE LOGIN = ?
jdbcRealm.userRolesQuery = SELECT p.TIPO FROM USUARIO u, PAPEL p WHERE p.ID = u.PAPEL_ID and u.LOGIN = ?
jdbcRealm.permissionsLookupEnabled = false
# jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource = $datasource

securityManager.realms = $jdbcRealm

# Filter Setup
[urls]
/javax.faces.resource/** = anon
/login.xhtml = authc
/logout = logout
/admin/** = authc, roles[ADMINISTRADOR]
/gerente/** = authc, roles[GERENTE]
/assistente/** = authc, roles[ASSISTENTE]
/professor/** = authc, roles[PROFESSOR]
/** = authc, roles[USUARIO]